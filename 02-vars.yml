- name: Declare variable at Play level
  hosts: all
  connection: local
  vars:
    URL: play.example.com
  tasks:
    - name: Access a variable
      ansible.builtin.debug:
        msg: URL == {{URL}}
# ansible-playbook -i localhost, 02-vars.yml
- name: Declare variable in another file
  hosts: all
  connection: local
  vars_files:
    - var.yml
  tasks:
    - name: Access variable
      ansible.builtin.debug:
        msg: URL == {{URL}}
## vars_files can also be declared on task level.

# ansible-playbook -i localhost, 02-vars.yml

- name: Declare variable at Tasks level
  hosts: all
  connection: local
  tasks:
    - name: Declare and access a variable
      ansible.builtin.debug:
        msg: URL == {{URL}}
      vars:
        URL: task.example.com
# ansible-playbook -i localhost, 02-vars.yml

- name: Declare variable from inventory file
  hosts: all
  connection: local
  tasks:
    - name: Access variable
      ansible.builtin.debug:
        msg: URL == {{URL}}


# ansible-playbook -i inv 02-vars.yml

# For command line variable
# ansible-playbook -i inv 02-vars.yml -e URL=cli.example.com

- name: Access a fact
  hosts: all
  connection: local
  tasks:
    - name: Access fact
      ansible.builtin.debug:
        msg: Anisble Host name == {{ansible_fqdn}}

# ansible-playbook -i inv 02-vars.yml -e URL=cli.example.com

- name: Register a variable
  hosts: all
  connection: local
  tasks:
    - name: run a shell command
      ansible.builtin.shell: uptime
      register: out
    - name: Print out - Use Double quotes if value starts with variable
      ansible.builtin.debug:
        msg: "{{out}}"

    - name: Print out without double quotes
      ansible.builtin.debug:
        msg: print out without double quotes {{out}}

    - name: Print out with double quotes
      ansible.builtin.debug:
        msg: "print out double quotes {{out}}"

    - name: Print out stdout
      ansible.builtin.debug:
        msg: "{{out.stdout}}"
    - name: Set a fact
      ansible.builtin.set_fact:
        OUTPUT: "{{out.stdout}}"